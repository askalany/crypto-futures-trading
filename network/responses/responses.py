# Generated by https://quicktype.io
from dataclasses import dataclass
from typing import List


@dataclass
class CancelAllOrdersResponse:
    code: int
    msg: str


@dataclass
class ListenKeyResponse:
    listenKey: str


@dataclass
class MarkPriceResponse:
    symbol: str
    markPrice: str
    indexPrice: str
    estimatedSettlePrice: str
    lastFundingRate: str
    nextFundingTime: float
    interestRate: str
    time: float


@dataclass
class PositionInformationResponse:
    symbol: str
    positionAmt: str
    entryPrice: str
    breakEvenPrice: str
    markPrice: str
    unRealizedProfit: str
    liquidationPrice: str
    leverage: str
    maxNotionalValue: str
    marginType: str
    isolatedMargin: str
    isAutoAddMargin: str
    positionSide: str
    notional: str
    isolatedWallet: str
    updateTime: float

@dataclass
class Asset:
    asset: str
    walletBalance: str
    unrealizedProfit: str
    marginBalance: str
    maintMargin: str
    initialMargin: str
    positionInitialMargin: str
    openOrderInitialMargin: str
    crossWalletBalance: str
    crossUnPnl: str
    availableBalance: str
    maxWithdrawAmount: str
    marginAvailable: bool
    updateTime: int
    
@dataclass
class Position:
    symbol: str
    initialMargin: str
    maintMargin: str
    unrealizedProfit: str
    positionInitialMargin: str
    openOrderInitialMargin: str
    leverage: str
    isolated: bool
    entryPrice: str
    maxNotional: str
    bidNotional: str
    askNotional: str
    positionSide: str
    positionAmt: str
    updateTime: int
    
@dataclass
class AccountInfoResponse:
    feeTier: int
    canTrade: bool
    canDeposit: bool
    canWithdraw: bool
    updateTime: int
    multiAssetsMargin: bool
    tradeGroupId: int
    totalInitialMargin: str
    totalMaintMargin: str
    totalWalletBalance: str
    totalUnrealizedProfit: str
    totalMarginBalance: str
    totalPositionInitialMargin: str
    totalOpenOrderInitialMargin: str
    totalCrossWalletBalance: str
    totalCrossUnPnl: str
    availableBalance: str
    maxWithdrawAmount: str
    assets: List[Asset]
    positions: List[Position]